(dev)
(start-dev)
(stop-dev)
(refresh)
(dev)
(require '[app.datomic :as ad])
(ad/create-dt "datomic:mem://mbe")
(def dt *1)
(ad/initcontent dt)
(refresh)
(require '[app.datomic :as ad])
(ad/create-dt "datomic:mem://mbe")
(def dt *1)
(ad/initschema dt)
(ad/initcontent dt)
(refresh)
(start-dev)
(stop-dev)
(refresh)
(assoc {} {:number (getcurrentpostnum db) :title title :content content})
(assoc {} {:number 1 :title "title" :content "content"})
(assoc {} :number 1 :title "title" :content "content")
(require '[app.db :as ad])
(load "app/db")
(require '[app.db :as ad])
(def dt (ad/create-dt '_))
dt
(ad/assocpost )
(ad/assocpost dt "title" "content")
(ad/assocpost dt "title2" "content2")
(refresh)
(start-dev)
(db/getallpost api/dt)
(stop-dev)
(refresh)
(require '[app.datomic :as dt])
(dt/getallpost dt/conn)
(dt/getallpost dt)
(dt/conn)
dt/conn
(db/getallpost api/dt)
(create-dt conn)
(dt/create-dt dt/conn)
(refresh)
(require '[app.datomic :as dt])
(require '[app.datomic :as dato])
(dato/getallpost dato/dt)
(dato/initschema dato/dt)
(dato/initcontent dato/dt)
(dato/getallpost dato/dt)
dato/dt
@dato/dt
(dato/getallpost dato/dt)
dato/dt
dato/db
dato/conn
(dato/getallpost dato/dt)
(dato/initschema dato/dt)
(refresh)
(dato/initschema dato/dt)
(dato/getallpost dato/dt)
(dato/initcontent dato/dt)
(dato/getallpost dato/dt)
(db/getallpost api/dt)
(dev)
(refresh)
(datom-dev)
(refresh)
(datom-dev)
(refresh)
(datom-dev)
conn
(datom-dev)
conn
(refresh)
(datom-dev)
(refresh)
(datom-dev)
conn
(conn)
(refresh)
(require '[app.datomic :as datom])
con
conn
datom/conn
(require 'app.datomic)
conn
(conn)
(datom-dev)
(referesh)
(datom-dev)
(referesh)
(refresh)
(def a 1)
(def b {:1 1})
b
(refresh)
(require '[app.datomic :as dato])
dato/conn
(refresh)
(require '[app.datomic :as dato])
dato/conn
(dato/initschema dt)
(refresh)
(dato/initschema dato/dt)
(require '[app.datomic :as dato])
(refresh)
(require '[app.datomic :as dato])
(require '[app.datomic :as dat])
(dat/initschema dat/dt)
(:conn dat/dt)
(refresh)
(dat/initschema dat/conn)
(refresh)
dat/conn
(require '[app.datomic :as dat])
dat/conn
dat/dt
(dat/initschema dat/dt)
